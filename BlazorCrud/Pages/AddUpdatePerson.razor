@page "/persons"
@page "/person/add"
@*@page "/person/add/{userId:int}"*@
@using Services
@inject IPersonService personService
@inject IJSRuntime jsRuntime
<PageTitle>@Title</PageTitle>

<div class="row">

    <div class="col-md-4">
        <h3>@Title</h3>

        @* <a href="/person/add" class="btn btn-outline-dark my-2">Add more</a>*@
        <br />

        <EditForm Model="@person" OnValidSubmit="Save">
            <DataAnnotationsValidator />

            <div class="form-group col-md-8">
                <label for="Name">Name</label>
                <InputText class="form-control" @bind-Value="person.Name" />
                <ValidationMessage For="@(() => person.Name)" />
            </div>

            <br />

            <div class="form-group col-md-8">
                <label for="Email">Email</label>
                <InputText class="form-control" @bind-Value="person.Email" />
                <ValidationMessage For="@(() => person.Email)" />
            </div>

            <br />

            <div class="my-2">
                @message
            </div>

            <div class="my-2">
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </EditForm>
    </div>

    <div class="col-md-6">

        <h3>Persons</h3>

        @* <a href="/persons" class="btn btn-outline-dark">Show All</a>*@

        <div class="card">
            <table class="table table-striped table-responsive mt-3">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Action</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var person in persons)
                    {
                        <tr>
                            <td>@person.Name</td>
                            <td>@person.Email</td>
                            <td>
                               @* <a href="/person/add/@person.Id" class="btn btn-info">Edit</a>*@
                                <a class="btn btn-info" @onclick="async () => await Edit(person.Id)">Edit</a>
                                <a class="btn btn-danger" @onclick="async () => await Delete(person)">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

</div>



@code {
    [Parameter]
    public int UserId { get; set; }
    private string message = string.Empty;
    Models.Person person = new();
    private string Title = "Add Person";

    private void Save()
    {
        message = "wait...";
        if (personService.AddUpdate(person))
        {
            message = "Successfully added";

            persons = personService.GetAll();

            person = new();
        }
        else
        {
            message = "Could not saved";
        }
    }


    private List<Models.Person> persons = new();

    private async Task Edit(int UserId)
    {
        if (UserId > 0)
        {
            Title = "Update Person";
            person = personService.FindById(UserId);
        }
    }


    private async Task Delete(Models.Person person)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure ????");
        if (confirmed)
        {
            if (personService.Delete(person.Id))
            {
                persons.Remove(person);
            }

        }
    }


    protected override void OnInitialized()
    {
        persons = personService.GetAll();

        //if (UserId > 0)
        //{
        //    Title = "Update Person";
        //    person = personService.FindById(UserId);
        //}

        base.OnInitialized();
    }
}

